# Generated by Django 4.2.1 on 2023-05-23 23:10

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('social', '0004_remove_comment_likes_count_remove_post_likes_count_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('calories', models.PositiveIntegerField()),
                ('carbohydrates', models.PositiveIntegerField()),
                ('proteins', models.PositiveIntegerField()),
                ('fats', models.PositiveIntegerField()),
                ('sugars', models.PositiveIntegerField(blank=True, null=True)),
                ('fiber', models.PositiveIntegerField(blank=True, null=True)),
                ('saturated_fats', models.PositiveIntegerField(blank=True, null=True)),
                ('trans_fats', models.PositiveIntegerField(blank=True, null=True)),
                ('cholesterol', models.PositiveIntegerField(blank=True, null=True)),
                ('sodium', models.PositiveIntegerField(blank=True, null=True)),
                ('comments', models.ManyToManyField(blank=True, to='social.comment')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.profile')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_foods', to='users.profile')),
                ('shares', models.ManyToManyField(blank=True, related_name='shared_foods', to='users.profile')),
            ],
        ),
        migrations.CreateModel(
            name='FoodServing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serving_size', models.PositiveIntegerField(verbose_name='Serving Size')),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracking.food')),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('foods', models.ManyToManyField(through='tracking.FoodServing', to='tracking.food')),
            ],
        ),
        migrations.CreateModel(
            name='WorkoutType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('body_part', models.CharField(choices=[('CORE', 'Core'), ('ARMS', 'Arms'), ('BACK', 'Back'), ('CHEST', 'Chest'), ('LEGS', 'Legs'), ('SHOULDERS', 'Shoulders'), ('OTHER', 'Other'), ('OLYMPIC', 'Olympic'), ('FULL_BODY', 'Full Body'), ('CARDIO', 'Cardio')], max_length=20)),
                ('category', models.CharField(choices=[('BARBELL', 'Barbell'), ('DUMBBELL', 'Dumbbell'), ('MACHINE', 'Machine / Other'), ('WEIGHTED_BODYWEIGHT', 'Weighted Bodyweight'), ('ASSISTED_BODYWEIGHT', 'Assisted Bodyweight'), ('CARDIO', 'Cardio'), ('DURATION', 'Duration')], max_length=20)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='workout_type_images/')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.profile')),
            ],
            options={
                'verbose_name_plural': 'Workout Types',
            },
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('duration', models.PositiveIntegerField()),
                ('calories_burned', models.PositiveIntegerField()),
                ('notes', models.TextField(blank=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('is_favorite', models.BooleanField(default=False)),
                ('rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comments', models.ManyToManyField(blank=True, to='social.comment')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_workouts', to='users.profile')),
                ('shares', models.ManyToManyField(blank=True, related_name='shared_workouts', to='users.profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('views', models.ManyToManyField(blank=True, related_name='viewed_workouts', to='users.profile')),
                ('workout_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracking.workouttype')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ProgressPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('photo', models.ImageField(upload_to='progress_photos/')),
                ('notes', models.TextField(blank=True)),
                ('comments', models.ManyToManyField(blank=True, to='social.comment')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_progress_photos', to='users.profile')),
                ('shares', models.ManyToManyField(blank=True, related_name='shared_progress_photos', to='users.profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('views', models.ManyToManyField(blank=True, related_name='viewed_progress_photos', to='users.profile')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='NutritionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('comments', models.ManyToManyField(blank=True, to='social.comment')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_nutrition_plans', to='users.profile')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_nutrition_plans', to='users.profile')),
                ('shares', models.ManyToManyField(blank=True, related_name='shared_nutrition_plans', to='users.profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_nutrition_plans', to='users.profile')),
            ],
        ),
        migrations.CreateModel(
            name='NutritionEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracking.meal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('measurement_type', models.CharField(choices=[('W', 'Weight'), ('H', 'Height')], max_length=1)),
                ('value', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date', models.DateField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('deadline', models.DateField()),
                ('status', models.CharField(choices=[('O', 'Ongoing'), ('A', 'Achieved'), ('F', 'Failed')], default='O', max_length=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='foodserving',
            name='meal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracking.meal'),
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('sets', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('reps', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('weight_lbs', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('comments', models.ManyToManyField(blank=True, to='social.comment')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.profile')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_exercises', to='users.profile')),
                ('shares', models.ManyToManyField(blank=True, related_name='shared_exercises', to='users.profile')),
                ('workout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='tracking.workout')),
            ],
        ),
    ]
